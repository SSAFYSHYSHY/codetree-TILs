#include <iostream>
#include <algorithm>

using namespace std;

int ans = 0;
int n, m;
int arr[201][201];

int dice[19][4][4] = {
    {{1,0,0,0}, {1,0,0,0}, {1,0,0,0}, {1,0,0,0}},
    {{1,1,1,1}, {0,0,0,0}, {0,0,0,0}, {0,0,0,0}},
    {{1,1,0,0}, {1,1,0,0}, {0,0,0,0}, {0,0,0,0}},
    {{1,0,0,0}, {1,0,0,0}, {1,1,0,0}, {0,0,0,0}},
    {{1,1,1,0}, {1,0,0,0}, {0,0,0,0}, {0,0,0,0}},
    {{1,1,0,0}, {0,1,0,0}, {0,1,0,0}, {0,0,0,0}},
    {{0,0,1,0}, {1,1,1,0}, {0,0,0,0}, {0,0,0,0}},
    {{0,1,0,0}, {0,1,0,0}, {1,1,0,0}, {0,0,0,0}},
    {{1,0,0,0}, {1,1,1,0}, {0,0,0,0}, {0,0,0,0}},
    {{1,1,0,0}, {1,0,0,0}, {1,0,0,0}, {0,0,0,0}},
    {{1,1,1,0}, {0,0,1,0}, {0,0,0,0}, {0,0,0,0}},
    {{1,0,0,0}, {1,1,0,0}, {0,1,0,0}, {0,0,0,0}},
    {{0,1,1,0}, {1,1,0,0}, {0,0,0,0}, {0,0,0,0}},
    {{0,1,0,0}, {1,1,0,0}, {1,0,0,0}, {0,0,0,0}},
    {{1,1,0,0}, {0,1,1,0}, {0,0,0,0}, {0,0,0,0}},
    {{1,0,0,0}, {1,1,0,0}, {1,0,0,0}, {0,0,0,0}},
    {{1,1,1,0}, {0,1,0,0}, {0,0,0,0}, {0,0,0,0}},
    {{0,1,0,0}, {1,1,0,0}, {0,1,0,0}, {0,0,0,0}},
    {{0,1,0,0}, {1,1,1,0}, {0,0,0,0}, {0,0,0,0}}
};

void Input() {
    cin >> n >> m;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            cin >> arr[i][j];
}

bool InRange(int x, int y) {
    return 0 <= x && x < n && 0 <= y && y < m;
}

int Calc(int x, int y, int num) {
    int sum = 0;
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 4; j++) {
            if (dice[num][i][j] == 1) {
                int nx = x + i;
                int ny = y + j;
                if (!InRange(nx, ny)) return 0;
                sum += arr[nx][ny];
            }
        }
    }
    return sum;
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    Input();

    // 완전 탐색
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            for (int k = 0; k < 19; k++) { // 수정: k < 19
                ans = max(ans, Calc(i, j, k));
            }
        }
    }

    cout << ans;
}
